{
  "`$authAuthEa`, `+initials`, `+<joinchar>`": "The last name of the first two authors, and \".ea\" if there are more than two.",
  "`$authEtAl`, `+initials`, `+<joinchar>`": "The last name of the first author, and the last name of the second author if there are two authors or \"EtAl\" if there are more than two. This is similar to `auth.etal`. The difference is that the authors are not separated by \".\" and in case of more than 2 authors \"EtAl\" instead of \".etal\" is appended.",
  "`$authEtal2`, `+initials`, `+<joinchar>`": "The last name of the first author, and the last name of the second author if there are two authors or \".etal\" if there are more than two.",
  "`$authForeIni`": "The forename initial of the first author.",
  "`$authIniN`, `+initials`, `+<joinchar>`": "The beginning of each author's last name, using no more than `N` characters.",
  "`$authN_M`, `+initials`": "The first `N` (default: all) characters of the `M`th (default: first) author's last name.",
  "`$authorIni`, `+initials`, `+<joinchar>`": "The first 5 characters of the first author's last name, and the last name initials of the remaining authors.",
  "`$authorLastForeIni`": "The forename initial of the last author.",
  "`$authorLast`, `+initials`": "The last name of the last author",
  "`$author`, `+<joinchar>`": "Author/editor information. Parameters are: - `creator`: author or editor, - `initials`: whether to add initials or to only use initials, - `letters`: pick this many letters from the name, defaults to 0 = all, - `select`: select these authors, number or range (inclusive); negative numbers mean \"from the end\", default = 0 = all, - `given`: use given name instead of family name, - `etal`: use this term to replace authors after `etalafter` authors have been named, - `etalafter`: add the `etal` if there are more authors selected that - `joiner`: use this character to join authors",
  "`$authorsAlpha`, `+initials`, `+<joinchar>`": "Corresponds to the BibTeX style \"alpha\". One author: First three letters of the last name. Two to four authors: First letters of last names concatenated. More than four authors: First letters of last names of first three authors concatenated. \"+\" at the end.",
  "`$authorsN`, `+initials`, `+<joinchar>`": "The last name of up to N authors. If there are more authors, \"EtAl\" is appended.",
  "`$authshort`, `+initials`, `+<joinchar>`": "The last name if one author is given; the first character of up to three authors' last names if more than one author is given. A plus character is added, if there are more than three authors.",
  "`$date`": "The date of the publication",
  "`$extra`": "A pseudo-field from the extra field. eg if you have `Original       date: 1970` in your `extra` field, you can get it as       `[extra=originalDate]`, or `tex.shortauthor: APA` which you could       get with `[extra=tex.shortauthor]`. Any `tex.` field will be       picked up, the other fields can be selected from [this       list](https://retorque.re/zotero-better-bibtex/exporting/extra-fields/)       of key names.",
  "`$firstpage`": "The number of the first page of the publication (Caution: this will return the lowest number found in the pages field, since BibTeX allows `7,41,73--97` or `43+`.)",
  "`$getField`": "Gets the value of the item field",
  "`$inspireHep`": "Fetches the key from inspire-hep based on DOI or arXiv ID",
  "`$journal`": "returns the journal abbreviation, or, if not found, the journal title, If 'automatic journal abbreviation' is enabled in the BBT settings, it will use the same abbreviation filter Zotero uses in the wordprocessor integration. You might want to use the `abbr` filter on this. Abbreviation behavior can be specified as `abbrev+auto` (the default) which uses the explicit journal abbreviation if present, and tries the automatic abbreviator if not (if auto-abbrev is enabled in the preferences), `auto` (skip explicit journal abbreviation even if present), `abbrev` (no auto-abbrev even if it is enabled in the preferences) or `off` (no abbrevation).",
  "`$keywordN`": "Tag number `N`",
  "`$language`": "Tests whether the item has the given language set, and skips to the next pattern if not",
  "`$lastpage`": "The number of the last page of the publication (See the remark on `firstpage`)",
  "`$len`": "If the length of the output does not match the given number, skip to the next pattern.",
  "`$library`": "returns the name of the shared group library, or nothing if the item is in your personal library",
  "`$month`": "the month of the publication",
  "`$origdate`": "the original date of the publication",
  "`$origyear`": "the original year of the publication",
  "`$shorttitleN_M`": "The first `N` (default: 3) words of the title, apply capitalization to first `M` (default: 0) of those",
  "`$shortyear`": "The last 2 digits of the publication year",
  "`$title`": "Capitalize all the significant words of the title, and concatenate them. For example, `An awesome paper on JabRef` will become `AnAwesomePaperJabref`",
  "`$type`": "Tests whether the item is of any of the given types",
  "`$veryshorttitleN_M`": "The first `N` (default: 1) words of the title, apply capitalization to first `M` (default: 0) of those",
  "`$year`": "The year of the publication",
  "`$zotero`": "Generates citation keys as the stock Zotero Bib(La)TeX export does. Note that this pattern inherits all the problems of the original Zotero citekey generation -- you should really only use this if you have existing papers that rely on this behavior."
}